'''
Created on 26.11.2015

@author: Oxana, Vinc, Marco
'''
from random import randint
import Buffer
from time import sleep

class Producer():
    
    producerQueue = []
    
    '''
    Constructor
    @param producerid 
        id of the producer
    '''
    def __init__(self, producerid):
        self.producerid = producerid
        self.pcpBuffer = Buffer.pcpBuffer
        
    '''
    generates a random number between 1 and 100 
    @return randomNumber
    '''
    def generateRandomNumb():  # @NoSelf
        randomNumber = randint(1,100)
        return randomNumber
    
    '''
    calls the push method from the Buffer class with a random number as value 
    '''
    def putToBuffer(self):
        self.pcpBuffer.push(Producer.generateRandomNumb())
        
    '''
    producer queue gets filled and the producers are assigned to work
    @param producerAmount
        the amount of producers the user entered at the start
    '''
    def runProducer(producerAmount):  # @NoSelf
        try:
            prodID = 1
            while prodID <= producerAmount:
                producer = Producer(prodID)
                Producer.producerQueue.append(producer)
                prodID += 1   
        
            while True:
                for producer in Producer.producerQueue:
                    sleep(0.1)
                    producer.putToBuffer()
        except(Exception):
            print("Producer could not start")
            
#end class
