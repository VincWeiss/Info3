using System;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Collections;

namespace EbnfParserProject
{
    /* in this class the text file is read, the threadpools get their task*/
    class TPool
    {
        private System.IO.StreamReader file =
        new System.IO.StreamReader("D:\\Uni\\Informatik\\Inf III\\C#\\expressions.txt");
        public int QueueLength;

        //constructor of ThreadPool class, sets the initial queue length
        public TPool()
        {
            QueueLength = 0;
        }

        //@param Tpool poolObj, String lineToParse
        //assigns the tasks to the threadpool
        public void addTaskToQueue(TPool poolObj, String lineToParse)
        {
            ThreadPool.QueueUserWorkItem(
            o => parseLine(lineToParse));
            QueueLength++;
        }

        //reads the Text file and makes strings out of it. 
        //@return ArrayList lineList, it contains the lines
        public ArrayList getTxt()
        {
            ArrayList lineList = new ArrayList();
            string completeText = file.ReadToEnd();
            string[] lines = completeText.Split('\n');
            foreach (String tempString in lines)
            {
                lineList.Add(tempString);
            }

            lineList.TrimToSize();
            return lineList;
        }

        //@param String lineToParse
        //creates a new parser object for each thread in threadpool and execute 
        //the task given
        public void parseLine(String lineToParse)
        {
            //Thread.Sleep(100);
            EBNFParser parserObject = new EBNFParser();
            parserObject.parse(lineToParse, parserObject);
            Thread.Sleep(100);
            QueueLength--;
        }
    }
} // end of class
