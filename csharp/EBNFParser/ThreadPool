using System;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EbnfParser;

namespace EbnfParser
{
    class TPool
    {
        EBNFParser p1 = new EBNFParser();
        private System.IO.StreamReader file =
        new System.IO.StreamReader("D:\\expressions.txt");
        int amountOfLines = 20;
        public int QueueLength;
        private Object thisLock = new Object();

        public TPool()
        {
            QueueLength = 0;
        }

        public void addTaskToQueue(int id)
        {
            ThreadPool.QueueUserWorkItem(
            new WaitCallback(parsLine), id);
            QueueLength++;
        }
        private string ReadTxt()
        {
            string line = "";
            line = file.ReadLine();
           
            return line;
        }
        public void parsLine(Object obj)
        {
            lock (thisLock)
            {
                String input = ReadTxt();
                Console.WriteLine(input);
                if (input != null || input != "")
                {
                    p1.parse(input);
                }
                Thread.Sleep(100);
                QueueLength--;
            }
        }
        public static void Main(String[] args)
        {
            TPool tPoolObj = new TPool();
            int id = 1;
            for (int x = 0; x < tPoolObj.amountOfLines; x++)
            { 
           
                tPoolObj.addTaskToQueue(id);
                id++;
            }
            while (tPoolObj.QueueLength != 0)
            {
                Thread.Sleep(1000);
            }
        }
    }
}
