using System;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Collections;

namespace ConsoleApplication4
{

    class TPool
    {
        private System.IO.StreamReader file =
        new System.IO.StreamReader("D:\\expressions.txt");
        int QueueLength;
        bool taskNotCompleted;
        int counter;

        public TPool()
        {
            taskNotCompleted = true;
            QueueLength = 0;
            counter = 0;
        }

        public void addTaskToQueue(TPool poolObj, String Line)
        {
            ThreadPool.QueueUserWorkItem(
            o => parsLine(Line));
            QueueLength++;
        }



        ArrayList getTxt()
        {
            ArrayList LineList = new ArrayList();
            string text = file.ReadToEnd();
            string[] lines = text.Split('\n');
            foreach ( String sack in lines)
            {
                LineList.Add(sack);
            }
            
            LineList.TrimToSize();
            return LineList;
        }

        public void parsLine(String lineToParse)
        {
            Thread.Sleep(1000);
            EBNFParser parser = new EBNFParser();
            parser.parse(lineToParse, parser);
            Thread.Sleep(1000);
            QueueLength--;
        }

        public static void Main(String[] args)
        {
            int counter = 0;
            TPool tPoolObj = new TPool();
            ThreadPool.SetMaxThreads(1, 1);
            ArrayList lineInDoc = tPoolObj.getTxt();
            foreach (String x in lineInDoc)
            {
                tPoolObj.addTaskToQueue(tPoolObj, x);
                counter++;
            }
            while (tPoolObj.QueueLength != 0 || tPoolObj.QueueLength < 0)
            {
                Thread.Sleep(1000);
            }
            
        }
    }

}
