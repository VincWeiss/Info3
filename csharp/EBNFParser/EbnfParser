using System;
using System.Collections;

public class EBNFParser
{
    bool lineOK = true;
    bool parenthesisClosed = true;

    void parse(String lineToParse)
    {
        EBNFParser p = new EBNFParser();
        ArrayList Line = new ArrayList();
        
        p.checkFirstPosition(Line);
    }

    public void checkFirstPosition(ArrayList Line)
    {


        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "0":
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
            case "9":
                checkForInt(Line);
                break;
            case "x":
            case "y":
            case "z":
                checkForVar(Line);
                break;
            case "(":
                checkForLParent(Line);
                break;
            default:
                lineOK = false;
                evaluateLine();
                break;
        }


    }

    String getNextPos(ArrayList Line)
    {
        String toCheck = "";
        toCheck = Line[0].ToString();
        return toCheck;
    }

    bool RemoveItemFromLine(ArrayList Line)
    {
        bool ItemisRemoved;
        if (Line.Count > 1)
        {
            ItemisRemoved = true;
            Line.RemoveAt(0);
        }
        else
        {
            ItemisRemoved = false;
        }
        return ItemisRemoved;
    }

    void checkForInt(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "0":
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
            case "9":
                Console.Write(" INTEGER ");
                if (RemoveItemFromLine(Line) == true)
                {
                    checkForInt(Line);
                }
                else
                {
                    evaluateLine();
                }
                break;
            case "+":
            case "-":
            case "*":
            case "/":
                checkForOperator(Line);
                break;
            case ")":
                Console.Write(" RPAREN ");
                if (RemoveItemFromLine(Line) == true)
                {
                    checkForRParent(Line);
                }
                else
                {
                    evaluateLine();
                }
                break;
            default:
                lineOK = false;
                evaluateLine();
                break;
        }
    }

    void checkForOperator(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "+":
            case "-":
            case "*":
            case "/":
                Console.Write(" OPERATOR ");
                if (RemoveItemFromLine(Line) == true)
                {
                    checkForLParent(Line);
                }
                else
                {
                    evaluateLine();
                }
                break;
            default:
                lineOK = false;
                evaluateLine();
                break;
        }

    }

    void checkForVar(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {

            case "x":
            case "y":
            case "z":
                Console.Write(" Variable ");
                //getNextPos(Line);
                if (RemoveItemFromLine(Line) == true)
                {
                    checkForOperator(Line);
                }
                else
                {
                    evaluateLine();
                }
                break;
            default:
                lineOK = false;
                evaluateLine();
                break;
        }
    }
    void evaluateLine()
    {

        if (lineOK == true)
        {
            Console.WriteLine();
            Console.WriteLine(" ---The Line is valid---");
            resetGrammarChecker();
        }
        else
        {
            Console.WriteLine();
            Console.WriteLine("---The Line is NOT valid---");
            resetGrammarChecker();
        }

    }

    void checkForLParent(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        if (toCheck == "(")
        {
            Console.WriteLine("LPAREN");
            parenthesisClosed = false;
            RemoveItemFromLine(Line);
            Line.TrimToSize();
        }
        checkForInt(Line);
    }

    void checkForRParent(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        if (toCheck == ")")
        {
            if (parenthesisClosed == false)
            {
                parenthesisClosed = true;
                RemoveItemFromLine(Line);
                Line.TrimToSize();
            }
            checkForOperator(Line);
        }
    }

    void resetGrammarChecker()
    {
        lineOK = true;
        parenthesisClosed = true;
    }
}
