using System;
using System.Collections;

public class EBNFParser
{
    public void parse(ArrayList lineToParse, EBNFParser p)
    {
        String endline = "";
        foreach (string tsl in lineToParse)
        {
            endline += tsl;
        }
        if (lineToParse.Capacity < 1)
          {
              //Console.WriteLine("StartCapacity was too small!!!");
          }
          else
          {
          p.checkFirstPosition(lineToParse);
            //Console.WriteLine(endline);
          }
    }

    void checkFirstPosition(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "0":
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
            case "9":
                checkForInt(Line);
                break;
            case "x":
            case "y":
            case "z":
                checkForVar(Line);
                break;
            case "(":
                checkForLParent(Line);
                break;
        }


    }

    void checkForInt(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "0":
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
            case "9":
                ////Console.Write(" INT|" + toCheck + "| ");
                Line = RemoveItemFromLine(Line);
                checkForInt(Line);
                break;
            case "+":
            case "-":
            case "*":
            case "/":
                checkForOperator(Line);
                break;
            case ")":
                ////Console.Write(" )|" + toCheck + "| ");
                checkForRParent(Line);
                break;
            case "End":
                checkForEnd(Line);
                break;
        }
    }

    void checkForOperator(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "+":
            case "-":
            case "*":
            case "/":
                //Console.Write(" OP|" + toCheck + "| ");
                Line = RemoveItemFromLine(Line);
                checkForLParent(Line);
                break;
            case "End":
                checkForEnd(Line);
                break;
        }

    }

    void checkForVar(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        switch (toCheck)
        {
            case "x":
            case "y":
            case "z":
                //Console.Write(" Var|" + toCheck + "| ");
                Line = RemoveItemFromLine(Line);
                checkForRParent(Line);
                break;
            case "End":
                checkForEnd(Line);
                break;
        }
    }
        void evaluateLine(ArrayList Line)
    {
        
        if (Line.Capacity == 1)
        {
            
            Console.WriteLine();
            Console.WriteLine(" ---The Line is valid---");
        }
        else
        {
            Console.WriteLine();
            Console.WriteLine("---The Line is NOT valid---");
        }

    }

    void checkForLParent(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        if (toCheck == "(")
        {
            //Console.WriteLine("(");
            Line = RemoveItemFromLine(Line);
            Line.TrimToSize();
        }
        switch (toCheck)
        {
            case "0":
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
            case "9":
                checkForInt(Line);
                
                break;
            case "x":
            case "y":
            case "z":
                checkForVar(Line);
                break;
            
        }
    }

    void checkForRParent(ArrayList Line)
    {
        String toCheck = getNextPos(Line);
        if (toCheck == ")")
        {
            Line = RemoveItemFromLine(Line);
            Line.TrimToSize();
        }    
            checkForOperator(Line);
    }

    void checkForEnd(ArrayList Line)
    {
        String toCheck = "";
        toCheck = Line[0].ToString();
        evaluateLine(Line);
    }

    String getNextPos(ArrayList Line)
    {
        ////Console.WriteLine("LineCAPACITY in getnext = " + Line.Capacity.ToString());
        String toCheck = "";
            toCheck = Line[0].ToString();
        return toCheck;
    }

    ArrayList RemoveItemFromLine(ArrayList Line)
    {

        if(Line.Capacity > 1)
        {
            Line.RemoveAt(0);
            Line.TrimToSize();
            ////Console.WriteLine("Capacity in Remove =" + Line.Capacity);
        }
        else
        {
            Line.Add("End");
            Line.RemoveAt(0);
            Line.TrimToSize();
        }
        return Line;
    }
}


